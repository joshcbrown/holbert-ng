// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";

function stringifyExn(t) {
  return Core__Option.getExn(JSON.stringify(t, undefined, 2), undefined);
}

function MakeTerm(Term) {
  var termEquivalent = function (t, t1, t2, msg) {
    t.ok(Term.equivalent(t1, t2), Core__Option.getOr(msg, stringifyExn(t1) + " equivalent to " + stringifyExn(t2)));
  };
  var testParse = function (t, input, t2, msg) {
    var res = Term.parse(input, [], Caml_option.some(Term.makeGen()));
    if (res.TAG === "Ok") {
      var res$1 = res._0;
      t.equal(res$1[1], "", input + " input consumed");
      t.equal(res$1[0], t2, msg !== undefined ? Caml_option.valFromOption(msg) : undefined);
      return ;
    }
    t.fail("parse failed: " + res._0);
  };
  return {
          termEquivalent: termEquivalent,
          testParse: testParse
        };
}

export {
  stringifyExn ,
  MakeTerm ,
}
/* No side effect */
