type rec t =
  | Symbol({name: string})
  | Var({idx: int})
  | Schematic({schematic: int})
  | Lam({name: string, body: t})
  | App({func: t, arg: t})
  | Unallowed

include Signatures.TERM
  with type t := t
  and type meta = string
  and type schematic = int
  and type subst = Belt.Map.Int.t<t>

let strip: t => (t, array<t>)
// exposed for testing purposes
let singletonSubst: (schematic, t) => subst
let unifyTerm: (t, t, subst, ~gen: option<gen>) => subst
